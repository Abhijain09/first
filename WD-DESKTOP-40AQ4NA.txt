TLD(top level domain)(.com/.in/.org etc...)

anchor is seperated by #
it is used to navigation on current page.

domain name system(DNS)


static and dynamic

API(application programming interface)

beautify
html css support
jupyter
prettier


for inline elements margine(top,bottom),padding won't work


------------12-08-2021---------------

alt=""(for broken image)(glt pah dalne pr sirf likha aayega kuch show nhi krega)

<video></video>(add videos)

------------------------13-08-2021---------------
<a></a>(anchor tag)




--------------15-08-2021--------------
CSS-()
3 way to write
inline
internal
external

style= "cssname(color) : cssvalue ; background-color:cssValue "

when we use % it change according to the size of screen.

priority of CSS
inline>>internal>>external


--------------18-08-2021--------------

html is by default  position: static

position: relative->
an element with position relative is able to shift his position but it doesn't effect other elements.
(top,bottom,left,right)

position:fixed->(position ko fix kr deta h agr sacroll bhi krege to uspr kuch frk nhi pdega vo vhi  rhega)


position: absolute->
it allow to give explictly position (it works as a child on his parent class )


position: sticky->
(   )



symantic tag->

<header></header>(site ke top me hota h)
<section></section>(like as div tag) 
<footer></footer>(bottom part)
<main></main>(main body)
<span></span>


*Media Query *
it is use to make site good  it helps to set size of site according to device(mobile,laptop,tablet, large screen etc...)


*for use of Media Query it is important to write this in head tag*
*meta name="viewport" content="width-device-width, initial-scale=1.0"*


.mobile{
	display:block
	backgroung-color
font-size
}
@media(min-width:768px){
.mobile{
	display:none
}
.tablet{
	display:block
	backgroung-color:
font-size
}
}

@media(min-width:1024px){
.mobile{
	display:none
}
.tablet{
 	display:none
}
.laptop{
	display:block
	backgroung-color:
font-size
}
}

--------------Day-8-------------------
flexBox

4 type of flexbox
row 
row-reverse
column
column-reverse

flax-wrap: wrap;(make boxes)


justfy-content->(content ke sequence ke lie)

gap->(child element ke bich me space dene ke lie )

align-self:(perticular cell ke lie)

pseudo class(change the state)
pseudo element


-----------------------day-9----------------------

transform-(axis change)
transition-(change krta h  shape,time,delay,look,color )

-----------------------Day-10----------------

		Git

git config --global user.name "username"

git config --global user.name(check krne ke lie)

git config --global user.email "useremail"

git config --global user.email(check krne ke lie)

phle us folder me jayege jha se upload krni h file.

get init
get status
git add .
git commit -m "first commit"(comment show ke lie)
git branch -M main
git remote add origin https://github.com/Abhijain09/second.git(git pr set krne ke lie hr kisi ke lie alg hota h)
git push -u origin main



*for second time*
git add .
git commit -m "first commit"(comment show ke lie)
git push origin main

del for delete(windows)/rm -rf (linux)

		*for clone*

git clone  https://github.com/Abhijain09/first.git

clone update ke lie
git pull origin main


--------------------------Day-11----------------------

BEM -> block elements modifiers






		JAVA-SCRIPT
============================DAY-14===================================
console.log("")->print krane ke lie
console.error("")->error format me print krane ke lie.
console.warn("")->warning print krane ke lie.

PRIMITIVE datatype->they can not be modified, they do not provide any method.
*null
*string
*number
*big int
*boolean
*undefined
*symbol



*number->in JS all degits include in number ,
	its range is -(25^3 -1) to (25^3 -1)or -(15624) to (15624).

BigInt-> we use big int when number cross its range.we have to add *n* in last  to make number BigInt.



Non-PRIMITIVE datatype->
Array
object
 

================================================DAY-16==================================================


var color = ["r", 1, 2, "b", "B", "R", "qgubewigb"];
color.push("a"); ->add in last
color.unshift("f"); ->add in first
color.pop(); -> deleted last value
color.shift(); -> delete first value
console.log(color.join("-")); ->it joins array value by given sign.
console.log(color.indexOf("R")); ->show tha index of given value 0 se start hota h
console.log(color.sort()); ->sort the data of array  numbers,capital latters,small latters
console.log(color.reverse()); -> sort in desending order
var newcolor = color.slice(1, 3); -> slice the array from index 1 to index 3-1 .becasue array start from 0 index.



var age = [1, 2, 3, 4, 5, 6];
var f = age.find(myFunc); //func without argument

function myFunc(value, index, array) {
    //return value > 2; //return next greater value from 2
    return index > 3; //return next index;
}
console.log(f);

age.forEach(function(e) {
    console.log(e + 5); //work on all value of age array
});

for (var e of age) {
    console.log(e); // same as age.forEach
}




var obj = { 65: "A", 66: "B", 67: "C" };
console.log(obj);
console.log(Object.keys(obj)); ->print keys
console.log(Object.values(obj)); ->print values of keys
console.log(Object.entries(obj)); ->show data array of array
console.log(obj.hasOwnProperty(65)); -> show the given key is present or not.
console.log(obj.hasOwnProperty("pr2")); -> give boolean values.
obj.foo = "bar1"; -> create a new key if there are no such key by given name.
console.log(obj.foo);
console.log(obj);



var obje = { name: "js" };
var freezeObj = Object.freeze(obje); -> if we freeze any obj then we are not able to change anything in it
console.log(freezeObj);
console.log(Object.isFrozen(obje)); -> check obj is freeze or not



function say(mes = 2)  ->if we dont give any perameter it take tha given value  and if we give perameter ,it will take it.
{
    console.log(mes);
}
say(4);



======================================DAY-17============================================================

ES6 JAVA SCRIPT
in this js intruduce Let 
it is similar as var 
but it is a block scope and Var has h global Scope 
 

*Spread operator*->it has 3 dots(...) it allow to spreadout element of an obj such as array obj

ex->
const array1 = [1, 2, 3, 4, 5, 6];
const array2 = [...array1, 9, 10];-> spread array1 in staring of array2  
console.log(array2)

output-> 1,2,3,4,5,6,9,10

Template Literal (``)->in this we are able to write multiple line without usnig \n.


let simpleString = "this   is a simple string";
let templit = `this    is
tamplate literal`; -> this is tamplate variable 
console.log("noramlString =" + simpleString);
console.log("template" + templit + "literal=");
console.log(`template ${templit} litearl=`);-> this is tamplate syntex

----------------------------DAY-18-------------------------
DOM Mainpulation->it is randring the data 

document.getElementbyId("")
document.querySelector("")
document.querySelector("").innerHTML="Hello word"


----------------------------DAY-19-----------------------
ES6 
Destructuring is use to get the index or an element of array into indivitual variables.

const arr = [11, 12, 13, 14, 15];

const [one, two, three, four] = arr;

if variable is more than array value then it have undefin value.


